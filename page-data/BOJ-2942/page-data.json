{"componentChunkName":"component---src-templates-post-template-index-tsx","path":"/BOJ-2942/","result":{"data":{"cur":{"id":"872d498b-cf31-5a87-82aa-93906df5fa50","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/2942\" target=\"_blank\">문제 링크</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>사과가 남지 않으면서 사과를 받는 선수는 모두 같은 수의 사과를 받아야한다. 빨간 사과와 초록 사과의 최대공약수를 구하고 최대공약수의 약수를 구하면 위 조건을 만족하는 선수의 수를 모두 구할 수 있다. 빨간 사과와 초록 사과의 수를 선수의 수로 나눈 값을 출력한다.<br>\n최대공약수는 유클리드 호제법을 사용해 구한다. 약수를 구하는 방법은 구하는 수의 제곱근까지 약수를 찾고 찾은 값으로 구하는 수를 나눈 값도 약수임을 이용해 시간을 줄인다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\n<span class=\"token comment\">// 유클리드 호제법</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> b <span class=\"token operator\">?</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> r <span class=\"token operator\">>></span> g<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> G <span class=\"token operator\">=</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// r과 g의 최대공약수</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 최대공약수의 약수</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 제곱근까지 탐색</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 나누어 떨어지면</span>\n            v<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 추가</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">/</span> i <span class=\"token operator\">!=</span> i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 제곱근이 아니면</span>\n                v<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 약수로 나눈 값도 추가</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 가능한 선수 수에 대해 출력</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> v<span class=\"token punctuation\">)</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> r <span class=\"token operator\">/</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> g <span class=\"token operator\">/</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","excerpt":"📝 문제 문제 링크\n 📖 설명 사과가 남지 않으면서 사과를 받는 선수는 모두 같은 수의 사과를 받아야한다. 빨간 사과와 초록 사과의 최대공약수를 구하고 최대공약수의 약수를 구하면 위 조건을 만족하는 선수의 수를 모두 구할 수 있다. 빨간 사과와 초록 사과의 수를 선수의 수로 나눈 값을 출력한다. 최대공약수는 유클리드 호제법을 사용해 구한다. 약수를 구하는 방법은 구하는 수의 제곱근까지 약수를 찾고 찾은 값으로 구하는 수를 나눈 값도 약수임을 이용해 시간을 줄인다.\n ⌨️ 코드 📝 문제 📖 설명 ⌨️ 코드","frontmatter":{"date":"2024. 9. 17.","title":"BOJ 2942 퍼거슨과 사과","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-2942/"}},"next":{"id":"e9c78bb8-390a-5299-904c-02d49729a912","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/23835\" target=\"_blank\">문제 링크</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>임의의 두 방 사이의 경로는 정확히 한 개 있으므로 트리임을 알 수 있다. 1번 쿼리가 실행되면 DFS를 통해 경로를 탐색하고 2번 쿼리가 실행되면 저장한 배열을 통해 값을 조회만 한다.<br>\n양방향(무방향) 간선을 입력받아 저장하고 1번 쿼리인 경우 DFS를 실시한다. DFS는 몇 번째 배달하는 방인지를 나타내는 <code class=\"language-text\">cnt</code>, 목적지 <code class=\"language-text\">dest</code>, 현재 위치 <code class=\"language-text\">curr</code>가 있다. 탐색하며 가는 모든 경로에 <code class=\"language-text\">cnt</code> 만큼의 우유를 배달하고, 경로를 돌아가는 경우 다시 제거한다. 만약 <code class=\"language-text\">curr == dest</code>인 경우 1을 <code class=\"language-text\">return</code>하여 경로 상 배달했던 우유를 제거하지 않도록 한다.<br>\n2번 쿼리인 경우 배달한 우유를 저장한 <code class=\"language-text\">arr</code> 배열의 값을 조회하여 출력한다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> adj<span class=\"token punctuation\">[</span><span class=\"token number\">1001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> visited<span class=\"token punctuation\">[</span><span class=\"token number\">1001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> cnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> dest<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> curr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curr <span class=\"token operator\">==</span> dest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 목적지에 도달했다면</span>\n        arr<span class=\"token punctuation\">[</span>curr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> cnt<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 우유를 배달하고</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이전 우유들을 회수하지 않음</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// 목적지에 도달한 것이 아니라면</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> adj<span class=\"token punctuation\">[</span>curr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 현재 위치에서 각 간선으로</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 아직 방문하지 않았다면</span>\n            visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 방문 체크하고</span>\n            arr<span class=\"token punctuation\">[</span>curr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> cnt<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 우유를 일단 배달하고</span>\n            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다음 방으로 이동</span>\n            visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 방문 체크 취소</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 만약 이후의 경로에서 목적지에 도달했다면</span>\n                <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이전 우유들을 회수하지 않음</span>\n            arr<span class=\"token punctuation\">[</span>curr<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> cnt<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이후의 경로에서 목적지에 도달하지 못하면 우유를 회수</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 목적지에 도달하지 않음</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 간선 입력</span>\n        <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> a <span class=\"token operator\">>></span> b<span class=\"token punctuation\">;</span>\n        adj<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        adj<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    cin <span class=\"token operator\">>></span> q<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> t<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 1번 쿼리</span>\n            <span class=\"token keyword\">int</span> u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">;</span>\n            cin <span class=\"token operator\">>></span> u <span class=\"token operator\">>></span> v<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// u번 방부터 시작해서 v번 방에 도착하는 경로를 찾으며 우유 배달</span>\n            visited<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            visited<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 2번 쿼리</span>\n\t\t\t<span class=\"token comment\">// 현재까지 x번 방에 배달된 우유의 수 조회</span>\n            <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n            cin <span class=\"token operator\">>></span> x<span class=\"token punctuation\">;</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"2024. 9. 15.","title":"BOJ 23835 어떤 우유의 배달목록 (Easy)","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-23835/"}},"prev":{"id":"1ba18337-7444-52f2-8d6a-aa1fed89ef5c","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/14369\" target=\"_blank\">문제 링크(14369)</a><br>\n<a href=\"https://boj.kr/14370\" target=\"_blank\">문제 링크(14370)</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>10진수 0부터 9를 영어로 하면 각 <code class=\"language-text\">ZERO</code>, <code class=\"language-text\">ONE</code>, <code class=\"language-text\">TWO</code>, <code class=\"language-text\">THREE</code>, <code class=\"language-text\">FOUR</code>, <code class=\"language-text\">FIVE</code>, <code class=\"language-text\">SIX</code>, <code class=\"language-text\">SEVEN</code>, <code class=\"language-text\">EIGHT</code>, <code class=\"language-text\">NINE</code>이다. 이 중에서 <code class=\"language-text\">Z</code>는 <code class=\"language-text\">ZERO</code>를 특정할 수 있는 유일한 문자이다. 그렇다면 <code class=\"language-text\">Z</code>의 수만큼 <code class=\"language-text\">ZERO</code>를 만들 수 있을 것이고 앞으로 <code class=\"language-text\">ZERO</code>가 나올 경우는 없다. 마찬가지로 <code class=\"language-text\">W</code>는 <code class=\"language-text\">TWO</code>를 특정할 수 있고 <code class=\"language-text\">X</code>는 <code class=\"language-text\">SIX</code>를, <code class=\"language-text\">G</code>는 <code class=\"language-text\">EIGHT</code>를 특정할 수 있다. <code class=\"language-text\">SEVEN</code>은 처음에는 특정할 수 있는 문자가 없었지만 <code class=\"language-text\">SIX</code>를 이미 특정하여 모두 제거한 후에는 <code class=\"language-text\">S</code>가 <code class=\"language-text\">SEVEN</code>을 특정할 수 있게 된다. 이러한 방식으로 순서를 적절히 조합하면 모든 수를 특정할 수 있다. 이 문제에선 다행히 숫자를 모두 구한 다음 오름차순으로 정렬하여 출력하면 AC를 받을 수 있다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> t<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> t<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        string s<span class=\"token punctuation\">,</span> ans <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> s<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 각 문자마다 몇 번 사용되었는지 arr배열에 저장</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> s<span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>c<span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 'Z'는 \"ZERO\"를 특정할 수 있는 문자</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'Z'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 답에 0을 추가하고 \"ZERO\"의 각 문자의 개수 1씩 감소</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'Z'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 위 과정을 모든 수에 대해 적절한 순서로 진행</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'W'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'2'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'W'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'X'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'6'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'X'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'7'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'5'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'F'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'U'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'4'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'F'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'U'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'G'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'8'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'G'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'H'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'3'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'H'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 추가한 숫자들을 오름차순으로 정렬</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 출력 형식에 맞게 출력</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Case #\"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> ans <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"2024. 9. 18.","title":"BOJ 14369/14370 전화번호 수수께끼","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-14369,14370/"}},"site":{"siteMetadata":{"siteUrl":"https://nageune.github.io","comments":{"utterances":{"repo":"nageune/nageune.github.io"}}}}},"pageContext":{"slug":"/BOJ-2942/","nextSlug":"/BOJ-23835/","prevSlug":"/BOJ-14369,14370/"}},"staticQueryHashes":["1321405810","3649515864"]}