{"componentChunkName":"component---src-templates-post-template-index-tsx","path":"/BOJ-24542/","result":{"data":{"cur":{"id":"b3eba5a8-4a74-59c8-94ae-ff6da3ddee67","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/24542\" target=\"_blank\">문제 링크</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>친분 관계가 있는 사람들은 서로서로 자료를 공유할 수 있으므로 이들 중 한 명에게만 자료를 건네면 된다. 즉, 친분 관계를 트리로 나타내면 트리의 수 만큼 자료를 건네면 되고, 각 트리 중 아무나에게 자료를 건네면 되기 때문에 각 트리의 노드 수를 모두 곱한 값이 답이 된다.<br>\n친분 관계에 따라 트리를 구분하고 트리의 노드 수는 유니온-파인드 알고리즘을 사용하면 쉽게 구할 수 있다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> p<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 부모 노드를 저장하는 배열</span>\n\n<span class=\"token comment\">// 파인드</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> x<span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 유니온</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">)</span>\n        p<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n        p<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> n <span class=\"token operator\">>></span> m<span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">iota</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 친분 관계를 서로 묶어서 같은 트리에 속하게 한다.</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> u <span class=\"token operator\">>></span> v<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MOD <span class=\"token operator\">=</span> <span class=\"token number\">1000000007</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 각 트리의 원소 수를 세고</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">cnt</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        cnt<span class=\"token punctuation\">[</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 각 트리의 원소 수를 서로 곱한다.</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ans <span class=\"token operator\">%</span> MOD<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> MOD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> MOD<span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","excerpt":"📝 문제 문제 링크\n 📖 설명 친분 관계가 있는 사람들은 서로서로 자료를 공유할 수 있으므로 이들 중 한 명에게만 자료를 건네면 된다. 즉, 친분 관계를 트리로 나타내면 트리의 수 만큼 자료를 건네면 되고, 각 트리 중 아무나에게 자료를 건네면 되기 때문에 각 트리의 노드 수를 모두 곱한 값이 답이 된다. 친분 관계에 따라 트리를 구분하고 트리의 노드 수는 유니온-파인드 알고리즘을 사용하면 쉽게 구할 수 있다.\n ⌨️ 코드 📝 문제 📖 설명 ⌨️ 코드","frontmatter":{"date":"2024. 9. 19.","title":"BOJ 24542 튜터-튜티 관계의 수","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-24542/"}},"next":{"id":"1ba18337-7444-52f2-8d6a-aa1fed89ef5c","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/14369\" target=\"_blank\">문제 링크(14369)</a><br>\n<a href=\"https://boj.kr/14370\" target=\"_blank\">문제 링크(14370)</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>10진수 0부터 9를 영어로 하면 각 <code class=\"language-text\">ZERO</code>, <code class=\"language-text\">ONE</code>, <code class=\"language-text\">TWO</code>, <code class=\"language-text\">THREE</code>, <code class=\"language-text\">FOUR</code>, <code class=\"language-text\">FIVE</code>, <code class=\"language-text\">SIX</code>, <code class=\"language-text\">SEVEN</code>, <code class=\"language-text\">EIGHT</code>, <code class=\"language-text\">NINE</code>이다. 이 중에서 <code class=\"language-text\">Z</code>는 <code class=\"language-text\">ZERO</code>를 특정할 수 있는 유일한 문자이다. 그렇다면 <code class=\"language-text\">Z</code>의 수만큼 <code class=\"language-text\">ZERO</code>를 만들 수 있을 것이고 앞으로 <code class=\"language-text\">ZERO</code>가 나올 경우는 없다. 마찬가지로 <code class=\"language-text\">W</code>는 <code class=\"language-text\">TWO</code>를 특정할 수 있고 <code class=\"language-text\">X</code>는 <code class=\"language-text\">SIX</code>를, <code class=\"language-text\">G</code>는 <code class=\"language-text\">EIGHT</code>를 특정할 수 있다. <code class=\"language-text\">SEVEN</code>은 처음에는 특정할 수 있는 문자가 없었지만 <code class=\"language-text\">SIX</code>를 이미 특정하여 모두 제거한 후에는 <code class=\"language-text\">S</code>가 <code class=\"language-text\">SEVEN</code>을 특정할 수 있게 된다. 이러한 방식으로 순서를 적절히 조합하면 모든 수를 특정할 수 있다. 이 문제에선 다행히 숫자를 모두 구한 다음 오름차순으로 정렬하여 출력하면 AC를 받을 수 있다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> t<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> t<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        string s<span class=\"token punctuation\">,</span> ans <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> s<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 각 문자마다 몇 번 사용되었는지 arr배열에 저장</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> s<span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>c<span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 'Z'는 \"ZERO\"를 특정할 수 있는 문자</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'Z'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 답에 0을 추가하고 \"ZERO\"의 각 문자의 개수 1씩 감소</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'Z'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 위 과정을 모든 수에 대해 적절한 순서로 진행</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'W'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'2'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'W'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'X'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'6'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'X'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'7'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'S'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'5'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'F'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'V'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'U'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'4'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'F'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'U'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'G'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'8'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'G'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'H'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'3'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'T'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'H'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'R'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'O'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ans <span class=\"token operator\">+=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'I'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'N'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span><span class=\"token char\">'E'</span><span class=\"token operator\">-</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 추가한 숫자들을 오름차순으로 정렬</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 출력 형식에 맞게 출력</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Case #\"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> ans <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"2024. 9. 18.","title":"BOJ 14369/14370 전화번호 수수께끼","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-14369,14370/"}},"prev":{"id":"c0e23706-0621-5ba8-ba18-e5220ee5524d","html":"<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 문제</h2>\n<p><a href=\"https://boj.kr/2096\" target=\"_blank\">문제 링크</a>\n<br/><br/></p>\n<h2 id=\"-설명\" style=\"position:relative;\"><a href=\"#-%EC%84%A4%EB%AA%85\" aria-label=\" 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 설명</h2>\n<p>최솟값 및 최댓값을 저장하는 배열을 각각 만들고 0으로 초기화한 다음 각 라인의 입력을 받을 때마다 조건에 따라 갱신한다. <code class=\"language-text\">m</code> 배열과 <code class=\"language-text\">M</code> 배열은 각각 최솟값, 최댓값을 저장하는 배열이며, 각 index는 해당 위치에 내려왔을 때 최소 또는 최댓값을 저장하고 있다. <code class=\"language-text\">curr</code> 배열은 현재 입력받은 라인 값을 저장하는 배열이고 <code class=\"language-text\">prev</code> 배열은 <code class=\"language-text\">m</code> 또는 <code class=\"language-text\">M</code> 배열을 갱신하기 전에 값을 저장하는 용도이다.\n<br/><br/></p>\n<h2 id=\"️-코드\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\" aria-label=\"️ 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cin <span class=\"token operator\">>></span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 현재 라인 입력</span>\n        <span class=\"token comment\">// 이전 라인의 최솟값을 저장</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            prev<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> m<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 현재 칸에 도달하는 모든 경우 중 최솟값</span>\n        m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token comment\">// 이전 라인의 최댓값을 저장</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            prev<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 현재 칸에 도달하는 모든 경우 중 최댓값</span>\n        M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> curr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 마지막 라인의 각 칸에 도달했을 때 최댓값들 중 최댓값 및 최솟값들 중 최솟값을 출력</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">📝 문제</a></li>\n<li><a href=\"#-%EC%84%A4%EB%AA%85\">📖 설명</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%BD%94%EB%93%9C\">⌨️ 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"2024. 9. 20.","title":"BOJ 2096 내려가기","categories":"BOJ","emoji":"✔️"},"fields":{"slug":"/BOJ-2096/"}},"site":{"siteMetadata":{"siteUrl":"https://nageune.github.io","comments":{"utterances":{"repo":"nageune/nageune.github.io"}}}}},"pageContext":{"slug":"/BOJ-24542/","nextSlug":"/BOJ-14369,14370/","prevSlug":"/BOJ-2096/"}},"staticQueryHashes":["1321405810","3649515864"]}